# Maps the cross walk between EAD and ASpace objects.
# Borrows some ideas from Qubit
#   http://code.google.com/p/qubit-toolkit/source/browse/trunk/apps/qubit/modules/object/config/import/ead.yml
source:
  format: "xml"
  schema: "http://www.loc.gov/ead/ead.xsd"
entities:
  resource: 
    xpath: ["//ead"]
    properties:
      id_0: 
        xpath: ["child::*/child::*/child::unitid"]
        procedure: "|value| value.sub(/[\\/_\\.\\s].*/, '')"
      
      id_1:
        xpath: ["child::*/child::*/child::unitid"]
        procedure: "|value| value.split(/[\\/_\\-.\\s]/)[1]"
      
      id_2:
        xpath: ["child::*/child::*/child::unitid"]
        procedure: "|value| value.split(/[\\/_\\-.\\s]/)[2]"
        
      id_3:
        xpath: ["child::*/child::*/child::unitid"]
        procedure: "|value| value.split(/[\\/_\\-.\\s]/)[3]"

      language:
        default: "eng"
        
      level:
        default: "collection"

      title: 
        xpath: ["child::*/child::*/child::unittitle/text()"]
        
      subjects: 
        axis: "descendant"
        
      extents:
        xpath: ["child::*/child::*/child::*/child::extent"]
        default: "5 or so"
        procedure: "|value| {'portion' => 'whole', 'number' => value, 'extent_type' => 'reels'}"
      
      dates:
        xpath: ["child::*/child::*/child::unitdate"]
        procedure: "|value| {'expression' => value, 'label' => 'other'}"
        
      linked_agents:
        xpath: ["descendant::persname", "descendant::corpname"]
        procedure: "|val| {'role' => 'subject', 'ref' => val.uri}" #val is a json object (agent)
        
      notes:
        axis: "descendant"
 
  note_bibliography:
    xpath: ["//bibliography"]
    properties:
      label:
        default: "just a default note label"
        
      content:
        xpath: ["self"]
  
  note_index:
    xpath: ["//index"]
    properties:
      label:
        default: "just a default note label"
      
      content:
        xpath: ["self"]

  note_multipart:
    xpath: [ "//accessrestrict", "//accruals", "//acqinfo", "//altformavail", "//appraisal", "//arrangement", "//bioghist", "//custodhist", "//fileplan", "//odd", "//otherfindaid", "//originalsloc", "//phystech", "//prefercite", "//processinfo", "//relatedmaterial", "//scopecontent", "//separatedmaterial", "//userestrict"]
    properties: 
      label:
        default: "just a default note label"
      
      content:
        xpath: ["self"]
        
      type:
        xpath: ["self::name"]
        procedure: "|value| {'accessrestrict' => 'Conditions Governing Access', 'accruals' => 'Accruals', 'acqinfo' => 'Immediate Source of Acquisition', 'altformavail' => 'Existence and Location of Copies', 'appraisal' => 'Appraisal', 'arrangement' => 'Arrangement', 'bioghist' => 'Biographical / Historical', 'custodhist' => 'Custodial History', 'fileplan' => 'File Plan', 'odd' => 'General', 'otherfindaid' => 'Other Finding Aids', 'originalsloc' => 'Existence and Location of Originals', 'phystech' => 'Physical Characteristics and Technical Requirements', 'prefercite' => 'Preferred Citation', 'processinfo' => 'Processing Information', 'relatedmaterial' => 'Related Archival Materials', 'scopecontent' => 'Scope and Contents', 'separatedmaterial' => 'Separated Materials', 'userestrict' => 'Conditions Governing Use'}[value]"

  archival_object: 
    xpath: ["//c", "//c01", "//c02", "//c03", "//c04", "//c05", "//c06", "//c07", "//c08", "//c09", "//c10", "//c11", "//c12"]
    properties:
      dates:
        xpath: ["*/unitdate"]
        procedure: "|value| {'expression' => value, 'label' => 'other'}"

      component_id:
        xpath: ["*/unitid"]
        procedure: "|val| val.gsub!(/[\\/_\\-.]/, '_')"
        
      extents:
        xpath: ["child::*/child::*/child::extent"]
        default: "5 or so"
        procedure: "|value| {'portion' => 'whole', 'number' => value, 'extent_type' => 'reels'}"
        
      instances:
        xpath: ["child::*/child::container"]
        procedure: "|val| {'instance_type' => 'text', 'container' => val.to_hash}"
        # procedure: "|val| if val.match(/container.*?type=\"([a-zA-Z]*)\"/);  c = {}; val.scan(/container.*?type=\"([a-zA-Z]*)\"/).each_with_index {|t, i| c.merge!({\"type_#{i+1}\" => t[0], \"indicator_#{i+1}\" => '1', \"barcode_#{i+1}\" => '10001'})}; {'instance_type' => 'text', 'container' => c}; end"
        # if val.match(/container.*?type=([a-zA-Z]*)/); {'instance_type' => 'text', 'container' => {'type_1' => val.match(/container.*?type=([a-zA-Z]*)/)[0], 'indicator_1' => '1', 'barcode_1' => '10001'}}; end"

      language:
        default: "eng"

      level:
        xpath: ["@level"]
        default: "item"
        
      linked_agents:
        xpath: ["child::*/child::*/child::persname", "child::*/child::*/child::corpname"]
        procedure: "|val| {'role' => 'subject', 'ref' => val.uri}" #val is a json object (agent)
      
      notes:
        axis: "descendant"
        
      parent: 
        axis: "parent"

      ref_id: 
        xpath: ["@id"]

      resource: 
        axis: "ancestor"
        
      subjects: 
        axis: "descendant"
        
      title: 
        xpath: ["child::*/child::unittitle"]
        default: "Archival Object"
        
  container:
    xpath: ["//container"]
    properties:
      type_1: 
        xpath: ["@type"]

      indicator_1:
        xpath: ["@id"]
        default: "default_indicator"
        
      barcode_1: 
        default: "10101010"
    # a provisional attribute:
      # _parent:
        # xpath: ["@parent"]
    
  subject:
    xpath: ["//subject"]
    properties:
      terms: 
        xpath: ["self"]
        procedure: "|value| {'term' => value, 'term_type' => 'Cultural context'}"
        
  agent_person:
    xpath: ["//persname"]
    properties:
      agent_type:
        default: "agent_person"
      
      names:
        xpath: ["self"]
        procedure: "|value| {'rules' => 'local', 'primary_name' => value, 'sort_name' => value, 'name_order' => 'direct'}"

  agent_corporate_entity:
    xpath: ["//corpname"]
    properties:
      agent_type:
        default: "agent_corporate_entity"    
  
      names:
        xpath: ["self"]
        procedure: "|value| {'rules' => 'local', 'primary_name' => value, 'sort_name' => value}"
  
      



